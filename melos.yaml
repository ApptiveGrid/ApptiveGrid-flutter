name: ApptiveGridFlutter

packages:
  - packages/**

scripts:

  lint:all:
    run: |
      melos run lint:analyze && melos run lint:pub --no-select && melos run lint:format

  lint:analyze:
    run: |
      melos exec -c 5 -- \
        "dart analyze . --fatal-infos"

  lint:pub:
    run: |
      melos exec -c 5 --no-private -- \
        "dart pub publish --dry-run"
    select-package:
      ignore: "*example*"

  lint:format:
    run: |
      melos exec -c 1 -- \
        "flutter format . --set-exit-if-changed"

  test:all:
    run: melos run test --no-select && melos run test:web --no-select

  test:
    run: |
      melos exec -c 1 -- \
        "mkdir -p test_results && flutter test --machine | tojunit -o MELOS_PACKAGE_PATH/test_results/output.xml"
    select-package:
      dir-exists:
        - test
      ignore:
        - "*web*"
        - "*example*"

  test:web:
    run: |
      melos exec -c 1 -- \
        "mkdir -p test_results && flutter test --no-pub --platform=chrome --machine | tojunit -o MELOS_PACKAGE_PATH/test_results/output.xml"
    select-package:
      dir-exists:
        - test
      scope:
        - "*web*"
      ignore:
        - "*example*"

  test:all_coverage:
    run: melos run test:coverage --no-select && melos run test:coverage_web --no-select

  test:coverage:
    run: |
      melos exec -c 1 -- \
        "mkdir -p coverage && flutter test --coverage && genhtml coverage/lcov.info -o coverage/html"
    select-package:
      dir-exists:
        - test
      ignore:
        - "*web*"
        - "*example*"

  test:coverage_web:
    run: |
      melos exec -c 1 -- \
        "mkdir -p coverage && flutter test --no-pub --platform=chrome --coverage && genhtml coverage/lcov.info -o coverage/html"
    select-package:
      dir-exists:
        - test
      scope:
        - "*web*"
      ignore:
        - "*example*"

  build:android:
    run: |
      melos run build:example_android_pub --no-select && melos bootstrap

  # melos bootstrap does not generate all files generated by a build that runs
  # `pub get`, and `flutter drive` does not either, so it is still necessary to
  # build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.
  build:example_android_pub:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build apk"
    description: Build a specific example app for Android.
    select-package:
      dir-exists:
        - android
      scope: "example"

  build:ios:
    run: |
      melos run build:example_ios_pub --no-select && melos bootstrap

  # melos bootstrap does not generate all files generated by a build that runs
  # `pub get`, and `flutter drive` does not either, so it is still necessary to
  # build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.
  build:example_ios_pub:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build ios --no-codesign"
    description: Build a specific example app for iOS.
    select-package:
      dir-exists:
        - ios
      scope: "example"