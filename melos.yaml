name: ApptiveGridFlutter

packages:
  - packages/**

scripts:

  lint:all:
    run: |
      melos run lint:analyze && melos publish -y && melos run lint:format

  lint:analyze:
    run: |
      melos exec -c 5 -- \
        "dart analyze . --fatal-infos"

  lint:pub:
    run: |
      melos exec -c 5 -- \
        "dart pub publish --dry-run"
    packageFilters:
      ignore: "*example*"
      noPrivate: true

  lint:format:
    run: |
      melos exec -c 1 -- \
        "dart format . --set-exit-if-changed"

  test:all:
    run: melos run test --no-select

  test:
    run: |
      melos exec -c 1 -- \
        flutter test --no-pub
    packageFilters:
      dirExists:
        - test
      ignore:
        - "*example*"
        - "*web*"

  test:web:
    run: |
      melos exec -c 1 -- \
        "mkdir -p test_results && flutter test --no-pub --platform=chrome --machine | tojunit -o MELOS_PACKAGE_PATH/test_results/output.xml"
    packageFilters:
      dirExists:
        - test
      scope:
        - "*web*"
      ignore:
        - "*example*"

  test:coverage:all:
    run: melos run test:coverage --no-select

  test:goldens:
    run: |
      melos exec -c 1 -- \
        "mkdir -p test_results && flutter test --no-pub"
    packageFilters:
      dirExists:
        - test/goldenFiles

  test:coverage:
    run: |
      melos exec -c 1 -- \
        "mkdir -p coverage && flutter test --coverage"
    packageFilters:
      dirExists:
        - test
      ignore:
        - "*example*"
        - "*web*"

  test:coverage:web:
    run: |
      melos exec -c 1 -- \
        "mkdir -p coverage && flutter test --no-pub --platform=chrome --coverage && genhtml coverage/lcov.info -o coverage/html"
    packageFilters:
      dirExists:
        - test
      scope:
        - "*web*"
      ignore:
        - "*example*"

  coverage:report:all:
    run: melos run coverage:report --no-select

  coverage:report:
    run: |
      melos exec -c 5 -- \
        "genhtml coverage/lcov.info -o coverage/html"
    packageFilters:
      fileExists:
        - coverage/lcov.info

  build:android:
    run: |
      melos run build:example_android_pub --no-select && melos bootstrap

  # melos bootstrap does not generate all files generated by a build that runs
  # `pub get`, and `flutter drive` does not either, so it is still necessary to
  # build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.
  build:example_android_pub:
    run: |
      melos exec -c 6 --dir-exists="android" --scope="*example" --fail-fast -- \
        "flutter build apk"
    description: Build a specific example app for Android.

  build:ios:
    run: |
      melos run build:example_ios_pub --no-select && melos bootstrap

  # melos bootstrap does not generate all files generated by a build that runs
  # `pub get`, and `flutter drive` does not either, so it is still necessary to
  # build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.
  build:example_ios_pub:
    run: |
      melos exec -c 6 --dir-exists="ios" --scope="*example" --fail-fast -- \
        "flutter build ios --debug --no-codesign"
    description: Build a specific example app for iOS.